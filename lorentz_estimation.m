function [fitresult, gof] = lorentz_estimation(time_vector, data_envelope,time_maximum)
%CREATEFIT1(TIME_VECTOR,DATA_ENVELOPE)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : time_vector
%      Y Output: data_envelope
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 01-Oct-2020 12:28:50


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( time_vector, data_envelope );

% Set up fittype and options.
ft = fittype( strcat('A1 / (1 + ( ( ',num2str(time_maximum),' - x) / (C1) )^2)'), 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Algorithm = 'Levenberg-Marquardt';
opts.StartPoint = [time_maximum time_maximum];
opts.Display = 'Off';

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );



